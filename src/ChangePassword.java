import java.awt.event.KeyEvent;
import java.sql.*;
import javax.swing.*;
public class ChangePassword extends javax.swing.JFrame {

    Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    
    
    public ChangePassword() {
        initComponents();
        conn = connect.ConnectDB();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_user_name = new javax.swing.JTextField();
        cmd_change_password = new javax.swing.JButton();
        txt_old_password = new javax.swing.JPasswordField();
        txt_new_password = new javax.swing.JPasswordField();
        txt_confirm_password = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User Details", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(153, 0, 0));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("User Name");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Old Password");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("New Password");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Confirm Password");

        cmd_change_password.setBackground(new java.awt.Color(153, 0, 0));
        cmd_change_password.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cmd_change_password.setForeground(new java.awt.Color(255, 255, 255));
        cmd_change_password.setText("Change Password");
        cmd_change_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_change_passwordActionPerformed(evt);
            }
        });
        cmd_change_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmd_change_passwordKeyPressed(evt);
            }
        });

        txt_confirm_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_confirm_passwordKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(112, 112, 112)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmd_change_password)
                    .addComponent(txt_user_name, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addComponent(txt_old_password)
                    .addComponent(txt_new_password)
                    .addComponent(txt_confirm_password))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_user_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_old_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_new_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_confirm_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(cmd_change_password)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmd_change_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_change_passwordActionPerformed
        // TODO add your handling code here:
        
    try{
           String NewPassword=String.valueOf(txt_new_password.getPassword());
           String ConfirmPassword=String.valueOf(txt_confirm_password.getPassword());
           String OldPassword=String.valueOf(txt_old_password.getPassword());
           String UserName=txt_user_name.getText();
        if (UserName.equals("")) {
              
                JOptionPane.showMessageDialog( this, "Please enter a username",
                                          "Error", JOptionPane.ERROR_MESSAGE);
                return;
                           }
        
        
        else if (OldPassword.equals("")) {
            
                JOptionPane.showMessageDialog( this, "Please enter a old password",
                                          "Error", JOptionPane.ERROR_MESSAGE);
                return;
                           } 
        
        else if (NewPassword.equals("")) {
              
                JOptionPane.showMessageDialog( this, "Please enter a new password",
                                          "Error", JOptionPane.ERROR_MESSAGE);
                return;
                            } 
        
        else if (ConfirmPassword.equals("")) {
               
                JOptionPane.showMessageDialog( this, "Please enter a confirmed password",
                                          "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } 
        
         else if (NewPassword.length()< 8) {
               
                JOptionPane.showMessageDialog(this,
                                         "The New Password Should be of Atleast 8 Characters",
                                         "Error", JOptionPane.ERROR_MESSAGE);

                return;
               }
                                   
         else if ((NewPassword).equals(OldPassword)) {
                
               JOptionPane.showMessageDialog(this,
                                         "Password is same..Re-enter new password","Error", JOptionPane.ERROR_MESSAGE);

               return; 
            }
         
         else if (!(NewPassword).equals(ConfirmPassword)) {
               
                JOptionPane.showMessageDialog(this,
                                         "New Password doesn't match with Confirmed Password",
                                         "Error", JOptionPane.ERROR_MESSAGE);

                return;
            }
       
      conn=connect.ConnectDB();
      String sql= "select user_name , password from login_info where user_name='" + txt_user_name.getText() + "' and password= '" + txt_old_password.getText() + "'";
      pst=conn.prepareStatement(sql);
      rs= pst.executeQuery();
      while(rs.next())
        {
            String user_name = rs.getString("user_name").trim();
            String password = rs.getString("password").trim();
             if(UserName.equals(user_name) && OldPassword.equals(password))
            {
                conn=connect.ConnectDB();
              Statement stmt = conn.createStatement();
                
              String sql11="Select password from login_info where password= '" + txt_new_password.getText() + "'";
              rs=stmt.executeQuery(sql11);
              if(rs.next()){
              JOptionPane.showMessageDialog( this, "Sorry Please use a Stronger password","Error", JOptionPane.ERROR_MESSAGE);
              txt_new_password.setText("");
              txt_confirm_password.setText("");
              return;    
       }
                
                 String sql1= "update login_info set password= '" + NewPassword + "' where user_name= '" + UserName + "' and password = '" + OldPassword + "'";
                 stmt.execute(sql1.toString());
            
                String sql2= "update user_registration set password= '" + NewPassword + "' , confirm_password= '" + NewPassword + "' where user_name= '" + UserName + "' and password = '" + OldPassword + "'";
                 stmt.execute(sql2.toString());
                 stmt.close();
                 
                 
                 JOptionPane.showMessageDialog(this,"Password Successfully Changed");
                 this.dispose();
                 return;
                 
                 
              }
             else if(!UserName.equals(user_name) || !OldPassword.equals(password))
            {
             JOptionPane.showMessageDialog(this,"invalid user name or password","Error", JOptionPane.ERROR_MESSAGE);   
             txt_user_name.setText("");
             txt_old_password.setText("");
             txt_new_password.setText("");
             txt_confirm_password.setText("");
             return;
            }
        } 
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_cmd_change_passwordActionPerformed

    private void cmd_change_passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmd_change_passwordKeyPressed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_cmd_change_passwordKeyPressed

    private void txt_confirm_passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_confirm_passwordKeyPressed
        // TODO add your handling code here:
             if (evt.getKeyCode()==KeyEvent.VK_ENTER){
         try{
           String NewPassword=String.valueOf(txt_new_password.getPassword());
           String ConfirmPassword=String.valueOf(txt_confirm_password.getPassword());
           String OldPassword=String.valueOf(txt_old_password.getPassword());
           String UserName=txt_user_name.getText();
        if (UserName.equals("")) {
              
                JOptionPane.showMessageDialog( this, "Please enter a username",
                                          "Error", JOptionPane.ERROR_MESSAGE);
                return;
                           }
        
        
        else if (OldPassword.equals("")) {
            
                JOptionPane.showMessageDialog( this, "Please enter a old password",
                                          "Error", JOptionPane.ERROR_MESSAGE);
                return;
                           } 
        
        else if (NewPassword.equals("")) {
              
                JOptionPane.showMessageDialog( this, "Please enter a new password",
                                          "Error", JOptionPane.ERROR_MESSAGE);
                return;
                            } 
        
        else if (ConfirmPassword.equals("")) {
               
                JOptionPane.showMessageDialog( this, "Please enter a confirmed password",
                                          "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } 
        
         else if (NewPassword.length()< 8) {
               
                JOptionPane.showMessageDialog(this,
                                         "The New Password Should be of Atleast 8 Characters",
                                         "Error", JOptionPane.ERROR_MESSAGE);

                return;
               }
                                   
         else if ((NewPassword).equals(OldPassword)) {
                
               JOptionPane.showMessageDialog(this,
                                         "Password is same..Re-enter new password","Error", JOptionPane.ERROR_MESSAGE);

               return; 
            }
         
         else if (!(NewPassword).equals(ConfirmPassword)) {
               
                JOptionPane.showMessageDialog(this,
                                         "New Password doesn't match with Confirmed Password",
                                         "Error", JOptionPane.ERROR_MESSAGE);

                return;
            }
       
      conn=connect.ConnectDB();
      String sql= "select user_name,password from login_info where user_name='" + txt_user_name.getText() + "' and password= '" + txt_old_password.getText() + "'";
      pst=conn.prepareStatement(sql);
      rs= pst.executeQuery();
      while(rs.next())
        {
            String username = rs.getString("user_name").trim();
            String password = rs.getString("password").trim();
            if(((UserName).equals(username)) && ((OldPassword).equals(password)))
            {
                conn=connect.ConnectDB();
                Statement stmt = conn.createStatement();
                
              String sql11="Select password from login_info where password= '" + txt_new_password.getText() + "'";
              rs=stmt.executeQuery(sql11);
              if(rs.next()){
              JOptionPane.showMessageDialog( this, "Sorry Please use a Stronger password","Error", JOptionPane.ERROR_MESSAGE);
              txt_new_password.setText("");
              txt_confirm_password.setText("");
              return;    
       }
                
                 String sql1= "update login_info set password= '" + NewPassword + "' where user_name= '" + UserName + "' and password = '" + OldPassword + "'";
                 stmt.execute(sql1.toString());
            
                String sql2= "update user_registration set password= '" + NewPassword + "' , confirm_password= '" + NewPassword + "' where user_name= '" + UserName + "' and password = '" + OldPassword + "'";
                 stmt.execute(sql2.toString());
                 
                 stmt.close();
                 
                 JOptionPane.showMessageDialog(this,"Password Successfully Changed");
                 this.dispose();
                 return;
                 
                 
              }
            else
            {
             JOptionPane.showMessageDialog(this,"invalid user name or password","Error", JOptionPane.ERROR_MESSAGE);   
             txt_user_name.setText("");
             txt_old_password.setText("");
             txt_new_password.setText("");
             txt_confirm_password.setText("");
             return;
            }
        } 
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        } 
    }
    }//GEN-LAST:event_txt_confirm_passwordKeyPressed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
           @Override
            public void run() {
                new ChangePassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd_change_password;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField txt_confirm_password;
    private javax.swing.JPasswordField txt_new_password;
    private javax.swing.JPasswordField txt_old_password;
    private javax.swing.JTextField txt_user_name;
    // End of variables declaration//GEN-END:variables
}
